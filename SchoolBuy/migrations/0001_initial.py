# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-24 21:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GoodsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ImgBig', models.ImageField(blank=True, upload_to='images/')),
                ('ImgSma', models.ImageField(blank=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Readed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GoodsMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=20)),
                ('Details', models.TextField()),
                ('Ctime', models.DateTimeField()),
                ('Mtime', models.DateTimeField()),
                ('PV', models.IntegerField(default=0)),
                ('Is_alive', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoodsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='SchoolBuy.GoodsType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Words', models.TextField()),
                ('Display', models.BooleanField(default=True)),
                ('Time', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nick', models.CharField(max_length=255)),
                ('Avatar', models.CharField(blank=True, default='/static/SchoolBuy/images/logo.png', max_length=200, null=True)),
                ('EmailCode', models.CharField(blank=True, max_length=500, null=True)),
                ('EmailCodeTime', models.DateTimeField(blank=True, null=True)),
                ('PasswdCode', models.CharField(blank=True, max_length=500, null=True)),
                ('PasswdCodeTime', models.DateTimeField(blank=True, null=True)),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='goodswords',
            name='From',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolBuy.UserProfile'),
        ),
        migrations.AddField(
            model_name='goodswords',
            name='Owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolBuy.GoodsMessage'),
        ),
        migrations.AddField(
            model_name='goodswords',
            name='To',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolBuy.GoodsWords'),
        ),
        migrations.AddField(
            model_name='goodsmessage',
            name='Category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolBuy.GoodsType'),
        ),
        migrations.AddField(
            model_name='goodsmessage',
            name='First_pic',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='first_pic', to='SchoolBuy.GoodsImage'),
        ),
        migrations.AddField(
            model_name='goodsmessage',
            name='Images',
            field=models.ManyToManyField(to='SchoolBuy.GoodsImage'),
        ),
        migrations.AddField(
            model_name='goodsmessage',
            name='Owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='goodslog',
            name='From',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolBuy.UserProfile'),
        ),
        migrations.AddField(
            model_name='goodslog',
            name='Mess',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolBuy.GoodsWords'),
        ),
        migrations.AddField(
            model_name='goodslog',
            name='Owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolBuy.GoodsMessage'),
        ),
        migrations.AddField(
            model_name='goodslog',
            name='To',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
