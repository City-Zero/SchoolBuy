/** onoff - v0.1.0 - 2014-01-15
* https://github.com/timmywil/jquery.onoff
* Copyright (c) 2014 Timmy Willison; Licensed MIT */
!function(a,b){"function"==typeof define&&define.amd?define(["jquery"],b):"object"==typeof exports?b(require("jquery")):b(a.jQuery)}(this,function(a){"use strict";function b(c,e){if(!(this instanceof b))return new b(c,e);if("input"!==c.nodeName.toLowerCase()||"checkbox"!==c.type)return a.error("OnOff should be called on checkboxes");var f=a.data(c,b.datakey);return f?f:(this.options=e=a.extend({},b.defaults,e),this.elem=c,this.$elem=a(c).addClass(e.className),this.$doc=a(c.ownerDocument||document),e.namespace+=a.guid++,c.id||(c.id="onoffswitch"+d++),this.enable(),a.data(c,b.datakey,this),void 0)}var c={props:["clientX","clientY"],filter:function(a,b){var c;return!b.clientX&&b.touches&&(c=b.touches[0])&&(a.clientX=c.clientX,a.clientY=c.clientY),a}};a.each(["touchstart","touchmove","touchend"],function(b,d){a.event.fixHooks[d]=c});var d=1,e=Array.prototype.slice,f=!!window.PointerEvent;return b.datakey="_onoff",b.defaults={namespace:".onoff",className:"onoffswitch-checkbox"},b.prototype={constructor:b,instance:function(){return this},wrap:function(){var b=this.elem,c=this.$elem,d=c.parent(".onoffswitch");d.length||(c.wrap('<div class="onoffswitch"></div>'),d=c.parent()),this.$con=d;var e=c.next('label[for="'+b.id+'"]');e.length||(e=a("<label/>").attr("for",b.id).insertAfter(b)),this.$label=e.addClass("onoffswitch-label");var f=e.find(".onoffswitch-inner");f.length||(f=a("<div/>").addClass("onoffswitch-inner").prependTo(e)),this.$inner=f;var g=e.find(".onoffswitch-switch");g.length||(g=a("<div/>").addClass("onoffswitch-switch").appendTo(e)),this.$switch=g},_handleMove:function(a){if(!this.disabled){this.moved=!0,this.lastX=a.clientX;var b=Math.max(Math.min(this.startX-this.lastX,this.maxRight),0);this.$switch.css("right",b),this.$inner.css("marginLeft",100*-(b/this.maxRight)+"%")}},_startMove:function(b){b.preventDefault();var c,d;f?(c="pointermove",d="pointerup"):"touchstart"===b.type?(c="touchmove",d="touchend"):(c="mousemove",d="mouseup");var e=this.elem,g=this.options.namespace,h=this.$switch,i=h[0],j=this.$inner.add(h).css("transition","none");this.maxRight=this.$con.width()-h.width()-a.css(i,"margin-left",!0)-a.css(i,"margin-right",!0)-a.css(i,"border-left-width",!0)-a.css(i,"border-right-width",!0);var k=e.checked;this.moved=!1,this.startX=b.clientX+(k?0:this.maxRight);var l=this,m=this.$doc.on(c+g,a.proxy(this._handleMove,this)).on(d+g,function(){j.css("transition",""),m.off(g),setTimeout(function(){l.moved&&(e.checked=l.lastX>l.startX-l.maxRight/2),l.$switch.css("right",""),l.$inner.css("marginLeft","")})})},_bind:function(){this._unbind();var b=f?"pointerdown":"mousedown touchstart";this.$switch.on(b,a.proxy(this._startMove,this))},enable:function(){this.wrap(),this._bind(),this.disabled=!1},_unbind:function(){var a=this.options.namespace;this.$doc.off(a),this.$switch.off(a)},disable:function(){this.disabled=!0,this._unbind()},unwrap:function(){this.disable(),this.$label.remove(),this.$elem.unwrap()},isDisabled:function(){return this.disabled},destroy:function(){this.disable(),a.removeData(this.elem,b.datakey)},option:function(b,c){var d,e=this.options;if(!b)return a.extend({},e);if("string"==typeof b){if(1===arguments.length)return void 0!==e[b]?e[b]:null;d={},d[b]=c}else d=b;a.each(d,a.proxy(function(a,b){switch(a){case"namespace":this._unbind();break;case"className":this.$elem.removeClass(e.className)}switch(e[a]=b,a){case"namespace":this._bind();break;case"className":this.$elem.addClass(b)}},this))}},a.fn.onoff=function(c){var d,f,g,h;return"string"==typeof c?(h=[],f=e.call(arguments,1),this.each(function(){d=a.data(this,b.datakey),d?"_"!==c.charAt(0)&&"function"==typeof(g=d[c])&&void 0!==(g=g.apply(d,f))&&h.push(g):h.push(void 0)}),h.length?1===h.length?h[0]:h:this):this.each(function(){new b(this,c)})},a.OnOff=b});